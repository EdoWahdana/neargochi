{"version":3,"sources":["index.js"],"names":["networkId","connect","nearAPI","config","nodeUrl","walleturl","helperUrl","explorerUrl","initContract","nearConfig","keyStore","keyStores","BrowserLocalStorageKeyStore","near","walletConnection","WalletConnection","account","Contract","contractName","viewMethods","callMethods","sender","getAccountId","contract","window","nearInitPromise","then","ReactDOM","render","document","getElementById"],"mappings":";;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;;;;;;;;;;;;;AAEA,iBAAsB,qBAAU,iBAAwB,SAAlC,CAAtB;AAAA,IAAQA,SAAR,cAAQA,SAAR;;AACA,IAAQC,OAAR,GAAoBC,OAApB,CAAQD,OAAR;AAEA,IAAME,MAAM,GAAG;AACdH,EAAAA,SAAS,EAAE,SADG;AAEdI,EAAAA,OAAO,EAAE,6BAFK;AAGdC,EAAAA,SAAS,EAAE,iCAHG;AAIdC,EAAAA,SAAS,EAAE,iCAJG;AAKdC,EAAAA,WAAW,EAAE;AALC,CAAf;;SAQeC;;;;;mFAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACOC,YAAAA,UADP,GACoB,qBAAU,iBAAwB,SAAlC,CADpB,EAGC;;AAHD;AAAA,mBAIoBP,OAAO,CAACD,OAAR;AAClBS,cAAAA,QAAQ,EAAE,IAAIR,OAAO,CAACS,SAAR,CAAkBC,2BAAtB;AADQ,eAEfH,UAFe,EAJpB;;AAAA;AAIOI,YAAAA,IAJP;AASC;AACMC,YAAAA,gBAVP,GAU0B,IAAIZ,OAAO,CAACa,gBAAZ,CAA6BF,IAA7B,CAV1B,EAYC;;AACMG,YAAAA,OAbP,GAaiBF,gBAAgB,CAACE,OAAjB,EAbjB,EAeC;;AAfD;AAAA,mBAgBwB,IAAId,OAAO,CAACe,QAAZ,CAAqBH,gBAAgB,CAACE,OAAjB,EAArB,EAAiDP,UAAU,CAACS,YAA5D,EAA0E;AAChGC,cAAAA,WAAW,EAAE,CAAC,cAAD,EAAiB,YAAjB,EAA+B,YAA/B,EAA6C,cAA7C,CADmF;AAEhGC,cAAAA,WAAW,EAAE,CAAC,MAAD,EAAS,UAAT,EAAqB,OAArB,CAFmF;AAGhGC,cAAAA,MAAM,EAAEP,gBAAgB,CAACQ,YAAjB;AAHwF,aAA1E,CAhBxB;;AAAA;AAgBOC,YAAAA,QAhBP;AAAA,6CAuBQ;AAAET,cAAAA,gBAAgB,EAAhBA,gBAAF;AAAoBS,cAAAA,QAAQ,EAARA;AAApB,aAvBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;AA0BAC,MAAM,CAACC,eAAP,GAAyBjB,YAAY,GACnCkB,IADuB,CACjB,gBAAoC;AAAA,MAAjCZ,gBAAiC,QAAjCA,gBAAiC;AAAA,MAAfS,QAAe,QAAfA,QAAe;;AAC1CI,oBAASC,MAAT,eACC,6BAAC,oBAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEd,MAAAA,gBAAgB,EAAEA,gBAApB;AAAsCS,MAAAA,QAAQ,EAAEA;AAAhD;AAA7B,kBACC,6BAAC,YAAD,OADD,CADD,EAICM,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJD;AAOA,CATuB,CAAzB","file":"src.e31bb0bc.js","sourceRoot":"..\\src","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport regeneratorRuntime from 'regenerator-runtime'\nimport getConfig from './config.js'\nimport * as nearAPI from 'near-api-js'\nimport { login, logout } from './utils'\nimport App from './App'\nimport UserContext from './context/UserContext'\n\nconst { networkId } = getConfig(process.env.NODE_ENV || 'testnet')\nconst { connect } = nearAPI\n\nconst config = {\n\tnetworkId: \"testnet\",\n\tnodeUrl: \"https://rpc.tesnet.near.org\",\n\twalleturl: \"https://wallet.testnet.near.org\",\n\thelperUrl: \"https://helper.testnet.near.org\",\n\texplorerUrl: \"https://explorer.testnet.near.org\"\n}\n\nasync function initContract() {\n\tconst nearConfig = getConfig(process.env.NODE_ENV || 'testnet');\t\n\t\n\t// Connect to wallet\n\tconst near = await nearAPI.connect({\n\t\tkeyStore: new nearAPI.keyStores.BrowserLocalStorageKeyStore(),\n\t\t...nearConfig\n\t});\n\t\n\t// Make object to pass to components\n\tconst walletConnection = new nearAPI.WalletConnection(near);\n\t\n\t// Store the authorized account object\n\tconst account = walletConnection.account();\n  \n\t// Initialize contract by contract name in config file\n\tconst contract = await new nearAPI.Contract(walletConnection.account(), nearConfig.contractName, {\n\t\tviewMethods: ['health_check', 'get_weight', 'get_hunger', 'get_happines'],\n\t\tcallMethods: ['meal', 'medicine', 'snack'],\n\t\tsender: walletConnection.getAccountId()\n\t});\n  \n\t// Wrap all into one User object\n\treturn { walletConnection, contract };\n}\n\nwindow.nearInitPromise = initContract()\n\t.then( ({ walletConnection, contract }) => {\n\t\tReactDOM.render (\n\t\t\t<UserContext.Provider value={{ walletConnection: walletConnection, contract: contract }}>\n\t\t\t\t<App />\n\t\t\t</UserContext.Provider>, \n\t\t\tdocument.getElementById('root')\n\t\t)\n\n\t});"]}